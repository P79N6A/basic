/**
 * Created by qfl
 * date 16/04/19 16:28:40
 * java 基本数据类型的长度和jvm有关 c++基本数据的长度和操作系统有关 (长度:在计算机中表示该数值的位数)
 * 基本数据类型的基础概念:
 * 1.自动装箱:自动装箱指的是将基本数据类型转换为对应的包装器类型
 * 2.自动拆箱:自动拆箱指的是将基本数据类型的包装器类型转换成相应的基本数据类型
 * 3.基本数据类型的长度
 * double:64bit
 * float:32bit
 * long:64bit
 * int:32bit
 * short:16bit
 * char:16bit
 * byte:8bit
 * boolean:1bit
 * void:0bit
 * 4.boolean不可以和其他基本数据类型进行转换
 * 5.除boolean类型的其它基本数据类型的转换原则:
 * 表示范围小的基本数据类型可以隐式转换为大的基本数据类型,
 * 表示范围大的基本数据类型需要强制转换为表示范围小的基本数据类型(会有精度丢失)
 * 6.基本数据类型的包装器类:
 * 基本数据类型的包装器类不能进行相互转换
 * double->Double
 * float->Float
 * long->Long
 * int->Integer
 * short->Short
 * char->Character
 * byte->Byte
 * boolean->Boolean
 * void->Void
 * 7.浮点数在计算机表示的格式特殊,因此会出现误差(浮点数计算时建议使用bigdecimal)
 * 浮点数在计算机中表示由 符号位  指数位  尾数位
 * double类型:1 11 52
 * float类型:1 8 23
 * 1.0在计算机表示为float: 0 01111111 00000 00000 00000 00000 000
 * 补充计算机组成原理知识辅助理解
 * 二进制转为十进制:
 * 1010.011->10.375
 * 整数部分转换->依次取每位乘以2的相应次幂求和
 * 1x2^3=8
 * 0x2^2=0
 * 1x2^1=2
 * 0x2^0=0
 * 对每次乘积结果求和得到对应十进制表示 8+0+2+0=10
 * 小数部分转换->依次取每位乘以2的负次幂求和
 * 0x2^(-1)=0
 * 1x2^(-2)=0.25
 * 1x2^(-3)=0.175
 * 对每次乘积结果求和得到对应十进制表示 0+0.25+0.175=0.375
 * 十进制转为二级制:10.375->1010.011
 * 整数部分转换->整数部分不断模2直到商为0然后把每次得到的余数按倒序排列
 * 10->1010计算过程:
 * 10%2=5......0
 * 5%2=2.......1
 * 2%2=1.......0
 * 1%2=0.......1
 * 逆序排列余数得到整数部分二级制表示 1010
 * 小数部分转换->小数部分(每次计算的积数的小数部分)不断乘2直到积的小数部分为0把每次得到的积的整数部分正序排列
 * 0.375->0.011转换过程:
 * 0.375x2=0.750......0
 * 0.75x2=1.50........1
 * 0.5x2=1.0..........1
 * 正序排列商的整数部分得到小数部分的二级制表示为011
 * 将二进制数1010.011转换为计算机中相应格式的数
 * 首先将1010.011转换为1.010011x2^3可以得到相应的尾数部分为0.010011和符号位0(正数符号位为0)
 * 然后求出移位数字127+3=130转换为二进制为10000010
 * 最后依次拼接为float: 0 10000010 01001 10000 00000 00000 000
 * 补充知识点,基本数据类型的运算操作:单目乘除位关系 三目逻辑后赋值
 * 单目运算: ++ --
 * 乘除:+ - x /
 * 位:>> << >>>
 * 关系:> < >= <= != ==
 * 三目: A ? B : C
 * 逻辑:& | ^ && || !
 * 赋值:= += -= /= *=
 * 关于基本数据类型包装器类的继承链
 * 基本包装器的共同抽象父类为Number 共同实现接口为Comparable 可序列化Serializable
 * Comparable接口仅有一个方法 compareTo
 * Serializable接口没有方法
 * Number抽象类(见源码)
 */