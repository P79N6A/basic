spring核心技术之控制反转(inversion of control)即依赖注入(dependecy injection)
将传统的对象之间的依赖关系交给spring ioc容器管理(即spring ioc容器管理对象的初始化 使用 销毁)
降低系统代码的耦合性

传统代码
class PersonDao {
  private PersonService personService = new PersonService();

  public void savePerson(Person person) {
     personService.save(person);
  }
}
spring思想
class PersonDao {
  private PersonService personService;

  public PersonDao(PersonService personService) {
      this.personService = personService;
  }

  public void savePerson(Person person) {
     personService.save(person);
  }

}

本包演示属性注入的方式
面向接口(静态工厂方法 实例工厂方法 )
set方法(set函数)
构造函数(构造器)